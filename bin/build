#!/usr/bin/env bash
set -eo pipefail

echo "---> locale buildpack"

# GET ARGS
LAYERS_DIR="$1"

# locale layer
LOCALE_LAYER="${LAYERS_DIR}/locale"
mkdir -p $LOCALE_LAYER

APT_CACHE_DIR="$LAYERS_DIR/cache"
APT_STATE_DIR="$LAYERS_DIR/state"
APT_OPTIONS="-o debug::nolocking=true -o dir::cache=$APT_CACHE_DIR -o dir::state=$APT_STATE_DIR"

mkdir -p $LOCALE_LAYER/.profile.d
mkdir -p $LOCALE_LAYER/.heroku/locales
mkdir -p "$APT_CACHE_DIR/archives/partial"
mkdir -p "$APT_STATE_DIR/lists/partial"

getEncoding () {
  encoding=`echo $1 | cut -d'.' -f2`

  case $encoding in
    "")
      encoding="UTF-8"
      ;;
    $pack)
      encoding="UTF-8"
      ;;
    "utf8")
      encoding="UTF-8"
      ;;
  esac
  echo $encoding
}

langs=`cat $LAYERS_DIR/.locales`
if [ ${#langs[@]} == 0 ]; then
  puts_warn "No lang values found. Nothing to do."
  exit 0
fi

for lang in $langs; do
  language=`echo $lang | cut -d'_' -f1`
  pack=`echo $lang | cut -d'.' -f1`
  encoding=$(getEncoding $lang)
  package=language-pack-$language-base

  puts_step "Updating or installing $package"
  apt-get $APT_OPTIONS update
  apt-get $APT_OPTIONS -y -d install --reinstall $package

  cat <<EOF >> $LOCALE_LAYER/.profile.d/000_locale.sh
localedef -f $encoding -i $pack /app/.heroku/locales/usr/share/locale-langpack/$language/
EOF
done

puts_step "Unpacking and configuring all locales"
for DEB in $(ls -1 $APT_CACHE_DIR/archives/*.deb); do
  dpkg -x $DEB $LOCALE_LAYER/.heroku/locales/
done

cat <<EOF >> $LOCALE_LAYER/.profile.d/000_locale.sh
export I18NPATH=/app/.heroku/locales/var/lib/locales/supported.d
export LOCPATH=/app/.heroku/locales/usr/share/locale-langpack/
EOF
